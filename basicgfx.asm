
	org $BFF0
	db "NES",$1a
	db $1
	db $1
	db %00000000
	db %00000000
	db 0
	db 0,0,0,0,0,0,0


curs_x equ $40
curs_y equ curs_x+1

vblanked equ $7f


nmihandler:
	pha
	php
		inc vblanked
	plp
	pla
	lda #$02
	sta $4014

	rti
	

irqhandler:
	rti

startgame:
	sei		; Disable interrupts
	cld		; Clear decimal mode

	ldx #$ff	
	txs		; Set-up stack
	inx		; x is now 0
	stx $2000	; Disable/reset graphic options 
	stx $2001	; Make sure screen is off
	stx $4015	; Disable sound
	stx $4010	; Disable DMC (sound samples)
	lda #$40
	sta $4017	; Disable sound IRQ
	lda #0	
waitvblank:
	bit $2002	; check PPU Status to see if
	bpl waitvblank	; vblank has occurred.
	lda #0
clearmemory:		; Clear all memory info
	sta $0000,x
	sta $0100,x
	sta $0300,x
	sta $0400,x
	sta $0500,x
	sta $0600,x
	sta $0700,x
	lda #$FF
	sta $0200,x	; Load $FF into $0200 to 
	lda #$00	; hide sprites 
	inx		; x goes to 1, 2... 255
	cpx #$00	; loop ends after 256 times,
	bne clearmemory ; clearing all memory


waitvblank2:
	bit $2002	; Check PPU Status one more time
	bpl waitvblank2	; before we start loading in graphics	
	lda $2002
	ldx #$3F
	stx $2006
	ldx #$00
	stx $2006
copypalloop:
	lda initial_palette,x
	sta $2007
	inx
	cpx #$20
	bcc copypalloop

	lda $2002
	lda #$20
	sta $2006	
	ldx #$00
	stx $2006


	
	ldx #$02 	; Set SPR-RAM address to 0
	stx $4014
spriteload:
	lda hello,x	; Load tiles, x and y attributes
	sta $0200,x
	inx
	cpx #$3C
	bne spriteload
	lda $2002
	lda #$20
	sta $2006
	lda #$00
	sta $2006



bkgd:
	lda backgrounddata,x
	sta $2007
	inx
	cpx #$00
	bne bkgd
bkgd2:
	lda backgrounddata+256,x
	sta $2007
	inx
	cpx #$00
	bne bkgd2
;bkgd3:
;	lda backgrounddata,x
;	sta $2007
;	inx
;	cpx #$00
;	bne bkgd3
;bkgd4:
;	lda backgrounddata+256,x
;	sta $2007
;	inx
;	cpx #$00
;	bne bkgd4
	

	lda #%00011110
	sta $2001
	lda #$88
	sta $2000




forever:
	jmp forever



initial_palette:
	db $0F,$20,$33,$1A
	db $0F,$21,$33,$1A
	db $0F,$21,$33,$1A
	db $0F,$21,$33,$1A
	db $0F,$08,$37,$21
	db $0F,$38,$16,$27
	db $0F,$21,$1A,$25
	db $0F,$21,$33,$30


hello:
	db $6c, $00, $01, $25
	db $6c, $01, $01, $2d
	db $6c, $02, $01, $35
	db $6c, $03, $01, $3d
	db $6c, $04, $01, $45

	db $75, $05, $01, $4d
	db $75, $04, $01, $2d
	db $75, $06, $01, $3d
	db $7c, $07, $01, $25

	db $7c, $08, $01, $2d
	db $7c, $09, $01, $35
	db $7c, $0A, $01, $3d
	db $7c, $0B, $01, $45
	db $7c, $0C, $01, $4d

	db $7c, $0D, $01, $5d

	
backgrounddata:
	
	db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	db $01,$02,$03,$04,$05,$06,$07,$08,$09,$0A,$0B,$0C,$0D,$0E,$0F,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$1A,$1B,$1C,$1D,$1E,$1F,$20
	db $21,$22,$23,$24,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00

	db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
	db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00



	org $FFFA
	dw nmihandler
	dw startgame
	dw irqhandler

chr_rom_start:

background_tile_start:

	db %11111111	; Blank tile - do I need this?
	db %11111111
	db %11111111
	db %11111111
	db %11111111
	db %11111111
	db %11111111
	db %11111111
	db $00, $00, $00, $00, $00, $00, $00, $00	; bitplane 2

	db %00011000	; "A"
	db %00100100
	db %01000010
	db %01000010
	db %01111110
	db %01000010
	db %01000010
	db %01000010
	db $00, $00, $00, $00, $00, $00, $00, $00	; bitplane 2

	db %11111000	; "B"
	db %10000100
	db %10000100
	db %11111000
	db %10001000
	db %10000100
	db %10000010
	db %11111100
	db $00, $00, $00, $00, $00, $00, $00, $00

	db %00111100	; "C"
	db %01000010
	db %10000000
	db %10000000
	db %10000000
	db %10000000
	db %10000010
	db %01111100
	db $00, $00, $00, $00, $00, $00, $00, $00

	db %11100000	; "D"
	db %10010000
	db %10001100
	db %10000110
	db %10000110
	db %10001100
	db %10010000
	db %11100000
	db $00, $00, $00, $00, $00, $00, $00, $00

	db %00000000	; "E"
	db %11111110
	db %10000000
	db %10000000
	db %11111100
	db %10000000
	db %10000000
	db %11111110
	db $00, $00, $00, $00, $00, $00, $00, $00

	db %00000000	; "F"
	db %11111110
	db %10000000
	db %10000000
	db %11111100
	db %10000000
	db %10000000
	db %10000000
	db $00, $00, $00, $00, $00, $00, $00, $00

	db %00111100	; "G"
	db %01000010
	db %10000000
	db %10000000
	db %10011100
	db %10000100
	db %10000010
	db %01111100
	db $00, $00, $00, $00, $00, $00, $00, $00

	db %00000000	; "H"
	db %10000010
	db %10000010
	db %10000010
	db %11111110
	db %10000010
	db %10000010
	db %10000010
	db $00, $00, $00, $00, $00, $00, $00, $00

	db %11111110	; "I"
	db %00010000
	db %00010000
	db %00010000
	db %00010000
	db %00010000
	db %00010000
	db %11111110
	db $00, $00, $00, $00, $00, $00, $00, $00


	db %11111110	; "J"
	db %00010000
	db %00010000
	db %00010000
	db %00010000
	db %00010000
	db %10010000
	db %01110000
	db $00, $00, $00, $00, $00, $00, $00, $00

	db %10000010	; "K"
	db %10000100
	db %10011000
	db %11100000
	db %11100000
	db %10011000
	db %10000100
	db %10000010
	db $00, $00, $00, $00, $00, $00, $00, $00

	db %10000000	; "L"
	db %10000000
	db %10000000
	db %10000000
	db %10000000
	db %10000000
	db %10000000
	db %11111110
	db $00, $00, $00, $00, $00, $00, $00, $00

	db %10000010	; "M"
	db %11000110
	db %10101010
	db %10010010
	db %10000010
	db %10000010
	db %10000010
	db %10000010
	db $00, $00, $00, $00, $00, $00, $00, $00

	db %10000010	; "N"
	db %11000010
	db %10100010
	db %10010010
	db %10010010
	db %10001010
	db %10000110
	db %10000010
	db $00, $00, $00, $00, $00, $00, $00, $00

	db %01111100	; "O"
	db %10000010
	db %10000010
	db %10000010
	db %10000010
	db %10000010
	db %10000010
	db %01111100
	db $00, $00, $00, $00, $00, $00, $00, $00

	db %01111100	; "P"
	db %10000010
	db %10000010
	db %10000010
	db %11111100
	db %10000000
	db %10000000
	db %10000000
	db $00, $00, $00, $00, $00, $00, $00, $00


	db %01111000	; "Q"
	db %10000100
	db %10000010
	db %10000010
	db %10000010
	db %10001010
	db %10000100
	db %01111010
	db $00, $00, $00, $00, $00, $00, $00, $00

	db %00111000	; "R"
	db %11000100
	db %10000010
	db %10000100
	db %11111100
	db %10001000
	db %10000100
	db %10000110
	db $00, $00, $00, $00, $00, $00, $00, $00

	db %01111100	; "S"
	db %11000010
	db %10000000
	db %01100000
	db %00011000
	db %00000100
	db %10000110
	db %11111100
	db $00, $00, $00, $00, $00, $00, $00, $00

	db %11111110	; "T"
	db %00010000
	db %00010000
	db %00010000
	db %00010000
	db %00010000
	db %00010000
	db %00010000
	db $00, $00, $00, $00, $00, $00, $00, $00


	db %10000010	; "U"
	db %10000010
	db %10000010
	db %10000010
	db %10000010
	db %10000010
	db %10000010
	db %11111110
	db $00, $00, $00, $00, $00, $00, $00, $00

	db %10000010	; "V"
	db %10000010
	db %10000010
	db %10000010
	db %10000010
	db %01000100
	db %00101000
	db %00010000
	db $00, $00, $00, $00, $00, $00, $00, $00

	db %10000010	; "W"
	db %10000010
	db %10000010
	db %10000010
	db %10000010
	db %10010010
	db %10101010
	db %01000100
	db $00, $00, $00, $00, $00, $00, $00, $00

	db %00000000	; "X"
	db %10000010	
	db %01000100
	db %00101000
	db %00010000
	db %00101000
	db %01000100
	db %10000010
	db $00, $00, $00, $00, $00, $00, $00, $00

	db %00000000	; "Y"
	db %10000010	
	db %01000100
	db %00101000
	db %00010000
	db %00010000
	db %00010000
	db %00010000
	db $00, $00, $00, $00, $00, $00, $00, $00

	db %11111110	; "Z"
	db %00000100	
	db %00001000
	db %00010000
	db %00100000
	db %01000000
	db %10000000
	db %11111110
	db $00, $00, $00, $00, $00, $00, $00, $00


	db %00010000	; "!"
	db %00010000
	db %00010000
	db %00010000
	db %00010000
	db %00000000
	db %00010000
	db %00010000
	db $00, $00, $00, $00, $00, $00, $00, $00


	db %00010000	; "1"
	db %00010000
	db %00010000
	db %00010000
	db %00010000
	db %00010000
	db %00010000
	db %00010000
	db $00, $00, $00, $00, $00, $00, $00, $00

	db %01111100	; "2"
	db %10000010
	db %00000010
	db %00000100
	db %00001000
	db %00110000
	db %01000000
	db %11111110
	db $00, $00, $00, $00, $00, $00, $00, $00

	db %01111100	; "3"
	db %10000010
	db %00000100
	db %00011000
	db %00011000
	db %00000100
	db %10000010
	db %01111100
	db $00, $00, $00, $00, $00, $00, $00, $00

	db %00001110	; "4"
	db %00010010
	db %00100010
	db %01111110
	db %00000010
	db %00000010
	db %00000010
	db %00000010
	db $00, $00, $00, $00, $00, $00, $00, $00

	db %11111110	; "5"
	db %10000000
	db %10000000
	db %11111000
	db %00000100
	db %00000010
	db %10000010
	db %01111100
	db $00, $00, $00, $00, $00, $00, $00, $00

	db %00011100	; "6"
	db %00100000
	db %01000000
	db %01111000
	db %01000100
	db %10000010
	db %10000010
	db %01111110
	db $00, $00, $00, $00, $00, $00, $00, $00

	db %11111110	; "7"
	db %00000100
	db %00001000
	db %00010000
	db %00100000
	db %01000000
	db %10000000
	db %10000000
	db $00, $00, $00, $00, $00, $00, $00, $00

	db %00011000	; "8"
	db %00100100
	db %01000010
	db %00111000
	db %01000100
	db %10000010
	db %10000010
	db %01111110
	db $00, $00, $00, $00, $00, $00, $00, $00


	db %00011000	; "9"
	db %00100100
	db %01000010
	db %00111010
	db %00000010
	db %00000010
	db %00000010
	db %00000010
	db $00, $00, $00, $00, $00, $00, $00, $00

background_tile_end:
	ds 4096-(background_tile_end-background_tile_start)


sprite_tile_start:

	db %00000000	; "CAAAAAAAAAAAAAAKE" (0)
	db %00011100
	db %00111110
	db %00111110
	db %00000000
	db %00000000
	db %00000000
	db %00000000

	db %00000000	; "CAAAAAAAAAAAAAAKE bitplane2"
	db %00000000
	db %00111110
	db %00111110
	db %01111110
	db %01111110
	db %01111110
	db %01111110

	db %00000000	; "Lana Person walk" (1)
	db %00011100
	db %00010000
	db %00010000
	db %00011100
	db %00001100
	db %00001100
	db %00010010

	db %00000000	; "Lana Person walk bp2" 
	db %00000000
	db %00001100
	db %00001100
	db %00001100
	db %00001100
	db %00001100
	db %00000000

	db %00000000	; "Lana Person" (2)
	db %00011100
	db %00010000
	db %00010000
	db %00011100
	db %00001100
	db %00001100
	db %00001100

	db %00000000	; "Lana Person bp2"
	db %00000000
	db %00001100
	db %00001100
	db %00001100
	db %00000000
	db %00000000
	db %00000000

	db %00000000	; "Lana bomb" (3)
	db %00001000
	db %00111110
	db %01111111
	db %01111111
	db %01111111
	db %00111110
	db %00011100

	db %00011000	; "Lana bomb bp2"
	db %00000000
	db %00000000
	db %00000000
	db %00000000
	db %00000000
	db %00000000
	db %00000000

			; BEANIE
	db %00000000	; "CAAAAAAAAAAAAAAKE" (4)
	db %00000000
	db %00000000
	db %00000000	
	db %00010000
	db %00000000
	db %01111100
	db %01111100

	db %00000000	; "CAAAAAAAAAAAAAAKE bitplane2"
	db %00000000
	db %00000000
	db %00000000
	db %00000000
	db %00111000
	db %01111100
	db %01111100

	db %00000000	; "Person walk" (5)
	db %00111000
	db %00101000
	db %00000000
	db %00111000
	db %00111000
	db %00111000
	db %00000000

	db %00000000	; "Person walk bp2"
	db %00010000
	db %00010000
	db %00111000
	db %00000100
	db %00000000
	db %00000000
	db %00101000

	db %00000000	; "Beanie bomb" (6)
	db %00001000
	db %00111100
	db %01111110	
	db %01111110	
	db %01111110	
	db %00111100	
	db %00000000
	db %00000000

	db %00001000	; "bomb bp2"
	db %00000000
	db %00000000
	db %00000000
	db %00000000
	db %00000000
	db %00000000
	db %00000000	

		; JOSH
	db %00000000	; "CAAAAAAAAAAAAAAKE" (7)
	db %00000000
	db %00000000
	db %00000000	
	db %00011000
	db %00000000
	db %00111100
	db %01111110

	db %00000000	; "CAAAAAAAAAAAAAAKE bitplane2"
	db %00000000
	db %00000000
	db %00011000
	db %00000000
	db %00111100
	db %00000000
	db %00000000

	db %00111000	; "Person walk" (8)
	db %00101000
	db %00000000
	db %00110000
	db %00110000
	db %00110000
	db %01001000
	db %00000000

	db %00000000	; "Person walk bp2"
	db %00011000
	db %00111000
	db %00000000
	db %00001000
	db %00000000
	db %00000000
	db %00000000

	db %00111000	; "Person stand" (9)
	db %00101000
	db %00000000
	db %00110000
	db %00110000
	db %00110000
	db %0011000
	db %00000000

	db %00000000	; "Person walk bp2"
	db %00011000
	db %00111000
	db %00000000
	db %00001000
	db %00000000
	db %00000000
	db %00000000

	db %00000000	; "Joshie bomb" (A)
	db %00010000
	db %00111000
	db %01111100	
	db %01111100	
	db %01111100	
	db %00111000	
	db %00000000
	db %00000000

	db %00110000	; "bomb bp2"
	db %00010000
	db %00000000
	db %00000000
	db %00000000
	db %00000000
	db %00000000
	db %00000000	

	db %00000000	; "Joshie bomb explosion!" (B)
	db %00000000
	db %00000000
	db %00000000	
	db %00000000	
	db %00000000	
	db %00000000	
	db %00000000


	db %00000100	; "explosion bp2"
	db %01101010
	db %10111101
	db %01111111
	db %11111110
	db %10111111
	db %01111100
	db %00100110	

	db %00000000	; "Joshie person 2" (C)
	db %00000000
	db %00000000
	db %00011000	
	db %00011000	
	db %00011000	
	db %00111100	
	db %00000000


	db %00000000	; "person2 bp2"
	db %00011000
	db %00011000
	db %01111110
	db %00011000
	db %00000000
	db %00000000
	db %00000000	

	; LISA
	db %00000000	; "Lisa cake 1" (D)
	db %00000000
	db %00000000
	db %00111000	
	db %00000000	
	db %00111000	
	db %00000000	
	db %01111100


	db %00000000	; "cake1 bp2"
	db %00000000
	db %00000000
	db %00111000
	db %00111000
	db %00111000
	db %00111000
	db %00000000	



	
	
sprite_tile_end

	
chr_rom_end:

; Pad chr-rom to 8k(to make valid file)
	ds 8192-(chr_rom_end-chr_rom_start)

